{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","bevavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","placeHolder","props","messageClass","className","src","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAqB3B,SAASC,IAKP,OACE,wBAAQC,QALe,WACvB,IAAMC,EAAW,IAAIb,IAASS,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAGrB,iCAUJ,SAASG,IACP,IAAMC,EAAQC,mBACRC,EAAcT,EAAUU,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBACA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEMxB,EAAKyB,YAAtBC,EAFW,EAEXA,IAAKC,EAFM,EAENA,SAFM,SAIZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAWvC,IAASU,UAAU8B,WAAWC,kBACzCN,MACAC,aARgB,OAWlBP,EAAa,IACbZ,EAAMyB,QAAQC,eAAe,CAACC,SAAU,WAZtB,2CAAH,sDAejB,OACE,qCACE,iCACGlB,GAAYA,EAASmB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACvD,qBAAKC,IAAKjC,OAGZ,uBAAMkC,SAAUrB,EAAhB,UACE,uBAAOsB,MAAOxB,EAAYyB,SAAU,SAACtB,GAAD,OAAOF,EAAaE,EAAEuB,OAAOF,QAAQG,YAAY,mBACrF,wBAAQC,KAAK,SAASC,YAAY,iBAAlC,wBAQR,SAASV,EAAYW,GACnB,MAAiCA,EAAMV,QAA/BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAMC,EAApB,EAAoBA,SAEduB,EAAexB,IAAQ1B,EAAKyB,YAAYC,IAAM,OAAS,WAE7D,OACE,sBAAKyB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKzB,GAAW,0DACrB,4BAAIE,OAMKwB,MAzFf,WACE,MAAeC,YAAatD,GAArBuD,EAAP,oBAIA,OACE,sBAAKJ,UAAU,MAAf,UACE,2BAIA,kCACGI,EAAO,cAAChD,EAAD,IAAe,cAACL,EAAD,UC9B/BsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f29edbd.chunk.js","sourcesContent":["import './App.css';\nimport React, { useRef, useState } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyA4Vgo74dDQlQgrZByhjwog0qQjaCJuys0\",\n  authDomain: \"fir-chatapp-a35f6.firebaseapp.com\",\n  projectId: \"fir-chatapp-a35f6\",\n  storageBucket: \"fir-chatapp-a35f6.appspot.com\",\n  messagingSenderId: \"686644600310\",\n  appId: \"1:686644600310:web:51abd5b390a265d530fbd7\",\n  measurementId: \"G-0YCL3QG9NN\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n\n\n  return (\n    <div className=\"App\">\n      <header>\n\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return (\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sing Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const {uid, photoURL} = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({bevavior: 'smooth'});\n  }\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy}/>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input value={formValue}  onChange={(e) => setFormValue(e.target.value)} placeholder=\" say something\" />\n        <button type=\"submit\" placeHolder=\"Enter messages\">send</button>\n\n      </form>\n    </>\n  )\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid , photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL ||'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{text}</p>\n    </div>\n  )\n}\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}